Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    BACKSLASH
    STRING

Grammar

Rule 0     S' -> exp
Rule 1     exp -> atom
Rule 2     exp -> quoted_list
Rule 3     exp -> call
Rule 4     quoted_list -> QUOTE list
Rule 5     list -> LPAREN items RPAREN
Rule 6     items -> item items
Rule 7     items -> empty
Rule 8     empty -> <empty>
Rule 9     item -> atom
Rule 10    item -> quoted_list
Rule 11    item -> call
Rule 12    item -> empty
Rule 13    call -> LET items
Rule 14    call -> LPAREN LET items RPAREN
Rule 15    call -> LPAREN SIMB items RPAREN
Rule 16    atom -> SIMB
Rule 17    atom -> bool
Rule 18    atom -> NUM
Rule 19    atom -> NUM . NUM
Rule 20    atom -> TEXT
Rule 21    atom -> <empty>
Rule 22    bool -> TRUE
Rule 23    bool -> FALSE
Rule 24    atom -> NIL

Terminals, with rules where they appear

.                    : 19
BACKSLASH            : 
FALSE                : 23
LET                  : 13 14
LPAREN               : 5 14 15
NIL                  : 24
NUM                  : 18 19 19
QUOTE                : 4
RPAREN               : 5 14 15
SIMB                 : 15 16
STRING               : 
TEXT                 : 20
TRUE                 : 22
error                : 

Nonterminals, with rules where they appear

atom                 : 1 9
bool                 : 17
call                 : 3 11
empty                : 7 12
exp                  : 0
item                 : 6
items                : 5 6 13 14 15
list                 : 4
quoted_list          : 2 10

Parsing method: LALR

state 0

    (0) S' -> . exp
    (1) exp -> . atom
    (2) exp -> . quoted_list
    (3) exp -> . call
    (16) atom -> . SIMB
    (17) atom -> . bool
    (18) atom -> . NUM
    (19) atom -> . NUM . NUM
    (20) atom -> . TEXT
    (21) atom -> .
    (24) atom -> . NIL
    (4) quoted_list -> . QUOTE list
    (13) call -> . LET items
    (14) call -> . LPAREN LET items RPAREN
    (15) call -> . LPAREN SIMB items RPAREN
    (22) bool -> . TRUE
    (23) bool -> . FALSE

    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    $end            reduce using rule 21 (atom -> .)
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    LPAREN          shift and go to state 4
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

    bool                           shift and go to state 2
    quoted_list                    shift and go to state 6
    call                           shift and go to state 9
    exp                            shift and go to state 13
    atom                           shift and go to state 14

state 1

    (4) quoted_list -> QUOTE . list
    (5) list -> . LPAREN items RPAREN

    LPAREN          shift and go to state 15

    list                           shift and go to state 16

state 2

    (17) atom -> bool .

    SIMB            reduce using rule 17 (atom -> bool .)
    NUM             reduce using rule 17 (atom -> bool .)
    TEXT            reduce using rule 17 (atom -> bool .)
    NIL             reduce using rule 17 (atom -> bool .)
    QUOTE           reduce using rule 17 (atom -> bool .)
    LET             reduce using rule 17 (atom -> bool .)
    LPAREN          reduce using rule 17 (atom -> bool .)
    TRUE            reduce using rule 17 (atom -> bool .)
    FALSE           reduce using rule 17 (atom -> bool .)
    RPAREN          reduce using rule 17 (atom -> bool .)
    $end            reduce using rule 17 (atom -> bool .)


state 3

    (18) atom -> NUM .
    (19) atom -> NUM . . NUM

    SIMB            reduce using rule 18 (atom -> NUM .)
    NUM             reduce using rule 18 (atom -> NUM .)
    TEXT            reduce using rule 18 (atom -> NUM .)
    NIL             reduce using rule 18 (atom -> NUM .)
    QUOTE           reduce using rule 18 (atom -> NUM .)
    LET             reduce using rule 18 (atom -> NUM .)
    LPAREN          reduce using rule 18 (atom -> NUM .)
    TRUE            reduce using rule 18 (atom -> NUM .)
    FALSE           reduce using rule 18 (atom -> NUM .)
    RPAREN          reduce using rule 18 (atom -> NUM .)
    $end            reduce using rule 18 (atom -> NUM .)
    .               shift and go to state 17


state 4

    (14) call -> LPAREN . LET items RPAREN
    (15) call -> LPAREN . SIMB items RPAREN

    LET             shift and go to state 19
    SIMB            shift and go to state 18


state 5

    (22) bool -> TRUE .

    SIMB            reduce using rule 22 (bool -> TRUE .)
    NUM             reduce using rule 22 (bool -> TRUE .)
    TEXT            reduce using rule 22 (bool -> TRUE .)
    NIL             reduce using rule 22 (bool -> TRUE .)
    QUOTE           reduce using rule 22 (bool -> TRUE .)
    LET             reduce using rule 22 (bool -> TRUE .)
    LPAREN          reduce using rule 22 (bool -> TRUE .)
    TRUE            reduce using rule 22 (bool -> TRUE .)
    FALSE           reduce using rule 22 (bool -> TRUE .)
    $end            reduce using rule 22 (bool -> TRUE .)
    RPAREN          reduce using rule 22 (bool -> TRUE .)


state 6

    (2) exp -> quoted_list .

    $end            reduce using rule 2 (exp -> quoted_list .)


state 7

    (20) atom -> TEXT .

    SIMB            reduce using rule 20 (atom -> TEXT .)
    NUM             reduce using rule 20 (atom -> TEXT .)
    TEXT            reduce using rule 20 (atom -> TEXT .)
    NIL             reduce using rule 20 (atom -> TEXT .)
    QUOTE           reduce using rule 20 (atom -> TEXT .)
    LET             reduce using rule 20 (atom -> TEXT .)
    LPAREN          reduce using rule 20 (atom -> TEXT .)
    TRUE            reduce using rule 20 (atom -> TEXT .)
    FALSE           reduce using rule 20 (atom -> TEXT .)
    RPAREN          reduce using rule 20 (atom -> TEXT .)
    $end            reduce using rule 20 (atom -> TEXT .)


state 8

    (16) atom -> SIMB .

    SIMB            reduce using rule 16 (atom -> SIMB .)
    NUM             reduce using rule 16 (atom -> SIMB .)
    TEXT            reduce using rule 16 (atom -> SIMB .)
    NIL             reduce using rule 16 (atom -> SIMB .)
    QUOTE           reduce using rule 16 (atom -> SIMB .)
    LET             reduce using rule 16 (atom -> SIMB .)
    LPAREN          reduce using rule 16 (atom -> SIMB .)
    TRUE            reduce using rule 16 (atom -> SIMB .)
    FALSE           reduce using rule 16 (atom -> SIMB .)
    RPAREN          reduce using rule 16 (atom -> SIMB .)
    $end            reduce using rule 16 (atom -> SIMB .)


state 9

    (3) exp -> call .

    $end            reduce using rule 3 (exp -> call .)


state 10

    (24) atom -> NIL .

    SIMB            reduce using rule 24 (atom -> NIL .)
    NUM             reduce using rule 24 (atom -> NIL .)
    TEXT            reduce using rule 24 (atom -> NIL .)
    NIL             reduce using rule 24 (atom -> NIL .)
    QUOTE           reduce using rule 24 (atom -> NIL .)
    LET             reduce using rule 24 (atom -> NIL .)
    LPAREN          reduce using rule 24 (atom -> NIL .)
    TRUE            reduce using rule 24 (atom -> NIL .)
    FALSE           reduce using rule 24 (atom -> NIL .)
    RPAREN          reduce using rule 24 (atom -> NIL .)
    $end            reduce using rule 24 (atom -> NIL .)


state 11

    (13) call -> LET . items
    (6) items -> . item items
    (7) items -> . empty
    (9) item -> . atom
    (10) item -> . quoted_list
    (11) item -> . call
    (12) item -> . empty
    (8) empty -> .
    (16) atom -> . SIMB
    (17) atom -> . bool
    (18) atom -> . NUM
    (19) atom -> . NUM . NUM
    (20) atom -> . TEXT
    (21) atom -> .
    (24) atom -> . NIL
    (4) quoted_list -> . QUOTE list
    (13) call -> . LET items
    (14) call -> . LPAREN LET items RPAREN
    (15) call -> . LPAREN SIMB items RPAREN
    (22) bool -> . TRUE
    (23) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for $end resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 8 (empty -> .)
    RPAREN          reduce using rule 8 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    LPAREN          shift and go to state 4
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 8 (empty -> .) ]
  ! NUM             [ reduce using rule 8 (empty -> .) ]
  ! TEXT            [ reduce using rule 8 (empty -> .) ]
  ! NIL             [ reduce using rule 8 (empty -> .) ]
  ! QUOTE           [ reduce using rule 8 (empty -> .) ]
  ! LET             [ reduce using rule 8 (empty -> .) ]
  ! LPAREN          [ reduce using rule 8 (empty -> .) ]
  ! TRUE            [ reduce using rule 8 (empty -> .) ]
  ! FALSE           [ reduce using rule 8 (empty -> .) ]
  ! SIMB            [ reduce using rule 21 (atom -> .) ]
  ! NUM             [ reduce using rule 21 (atom -> .) ]
  ! TEXT            [ reduce using rule 21 (atom -> .) ]
  ! NIL             [ reduce using rule 21 (atom -> .) ]
  ! QUOTE           [ reduce using rule 21 (atom -> .) ]
  ! LET             [ reduce using rule 21 (atom -> .) ]
  ! LPAREN          [ reduce using rule 21 (atom -> .) ]
  ! TRUE            [ reduce using rule 21 (atom -> .) ]
  ! FALSE           [ reduce using rule 21 (atom -> .) ]
  ! $end            [ reduce using rule 21 (atom -> .) ]
  ! RPAREN          [ reduce using rule 21 (atom -> .) ]

    item                           shift and go to state 20
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 21
    empty                          shift and go to state 22
    call                           shift and go to state 23
    atom                           shift and go to state 24
    items                          shift and go to state 25

state 12

    (23) bool -> FALSE .

    SIMB            reduce using rule 23 (bool -> FALSE .)
    NUM             reduce using rule 23 (bool -> FALSE .)
    TEXT            reduce using rule 23 (bool -> FALSE .)
    NIL             reduce using rule 23 (bool -> FALSE .)
    QUOTE           reduce using rule 23 (bool -> FALSE .)
    LET             reduce using rule 23 (bool -> FALSE .)
    LPAREN          reduce using rule 23 (bool -> FALSE .)
    TRUE            reduce using rule 23 (bool -> FALSE .)
    FALSE           reduce using rule 23 (bool -> FALSE .)
    $end            reduce using rule 23 (bool -> FALSE .)
    RPAREN          reduce using rule 23 (bool -> FALSE .)


state 13

    (0) S' -> exp .



state 14

    (1) exp -> atom .

    $end            reduce using rule 1 (exp -> atom .)


state 15

    (5) list -> LPAREN . items RPAREN
    (6) items -> . item items
    (7) items -> . empty
    (9) item -> . atom
    (10) item -> . quoted_list
    (11) item -> . call
    (12) item -> . empty
    (8) empty -> .
    (16) atom -> . SIMB
    (17) atom -> . bool
    (18) atom -> . NUM
    (19) atom -> . NUM . NUM
    (20) atom -> . TEXT
    (21) atom -> .
    (24) atom -> . NIL
    (4) quoted_list -> . QUOTE list
    (13) call -> . LET items
    (14) call -> . LPAREN LET items RPAREN
    (15) call -> . LPAREN SIMB items RPAREN
    (22) bool -> . TRUE
    (23) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 8 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    LPAREN          shift and go to state 4
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 8 (empty -> .) ]
  ! NUM             [ reduce using rule 8 (empty -> .) ]
  ! TEXT            [ reduce using rule 8 (empty -> .) ]
  ! NIL             [ reduce using rule 8 (empty -> .) ]
  ! QUOTE           [ reduce using rule 8 (empty -> .) ]
  ! LET             [ reduce using rule 8 (empty -> .) ]
  ! LPAREN          [ reduce using rule 8 (empty -> .) ]
  ! TRUE            [ reduce using rule 8 (empty -> .) ]
  ! FALSE           [ reduce using rule 8 (empty -> .) ]
  ! SIMB            [ reduce using rule 21 (atom -> .) ]
  ! NUM             [ reduce using rule 21 (atom -> .) ]
  ! TEXT            [ reduce using rule 21 (atom -> .) ]
  ! NIL             [ reduce using rule 21 (atom -> .) ]
  ! QUOTE           [ reduce using rule 21 (atom -> .) ]
  ! LET             [ reduce using rule 21 (atom -> .) ]
  ! LPAREN          [ reduce using rule 21 (atom -> .) ]
  ! TRUE            [ reduce using rule 21 (atom -> .) ]
  ! FALSE           [ reduce using rule 21 (atom -> .) ]
  ! RPAREN          [ reduce using rule 21 (atom -> .) ]

    item                           shift and go to state 20
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 21
    empty                          shift and go to state 22
    call                           shift and go to state 23
    atom                           shift and go to state 24
    items                          shift and go to state 26

state 16

    (4) quoted_list -> QUOTE list .

    SIMB            reduce using rule 4 (quoted_list -> QUOTE list .)
    NUM             reduce using rule 4 (quoted_list -> QUOTE list .)
    TEXT            reduce using rule 4 (quoted_list -> QUOTE list .)
    NIL             reduce using rule 4 (quoted_list -> QUOTE list .)
    QUOTE           reduce using rule 4 (quoted_list -> QUOTE list .)
    LET             reduce using rule 4 (quoted_list -> QUOTE list .)
    LPAREN          reduce using rule 4 (quoted_list -> QUOTE list .)
    TRUE            reduce using rule 4 (quoted_list -> QUOTE list .)
    FALSE           reduce using rule 4 (quoted_list -> QUOTE list .)
    RPAREN          reduce using rule 4 (quoted_list -> QUOTE list .)
    $end            reduce using rule 4 (quoted_list -> QUOTE list .)


state 17

    (19) atom -> NUM . . NUM

    NUM             shift and go to state 27


state 18

    (15) call -> LPAREN SIMB . items RPAREN
    (6) items -> . item items
    (7) items -> . empty
    (9) item -> . atom
    (10) item -> . quoted_list
    (11) item -> . call
    (12) item -> . empty
    (8) empty -> .
    (16) atom -> . SIMB
    (17) atom -> . bool
    (18) atom -> . NUM
    (19) atom -> . NUM . NUM
    (20) atom -> . TEXT
    (21) atom -> .
    (24) atom -> . NIL
    (4) quoted_list -> . QUOTE list
    (13) call -> . LET items
    (14) call -> . LPAREN LET items RPAREN
    (15) call -> . LPAREN SIMB items RPAREN
    (22) bool -> . TRUE
    (23) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 8 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    LPAREN          shift and go to state 4
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 8 (empty -> .) ]
  ! NUM             [ reduce using rule 8 (empty -> .) ]
  ! TEXT            [ reduce using rule 8 (empty -> .) ]
  ! NIL             [ reduce using rule 8 (empty -> .) ]
  ! QUOTE           [ reduce using rule 8 (empty -> .) ]
  ! LET             [ reduce using rule 8 (empty -> .) ]
  ! LPAREN          [ reduce using rule 8 (empty -> .) ]
  ! TRUE            [ reduce using rule 8 (empty -> .) ]
  ! FALSE           [ reduce using rule 8 (empty -> .) ]
  ! SIMB            [ reduce using rule 21 (atom -> .) ]
  ! NUM             [ reduce using rule 21 (atom -> .) ]
  ! TEXT            [ reduce using rule 21 (atom -> .) ]
  ! NIL             [ reduce using rule 21 (atom -> .) ]
  ! QUOTE           [ reduce using rule 21 (atom -> .) ]
  ! LET             [ reduce using rule 21 (atom -> .) ]
  ! LPAREN          [ reduce using rule 21 (atom -> .) ]
  ! TRUE            [ reduce using rule 21 (atom -> .) ]
  ! FALSE           [ reduce using rule 21 (atom -> .) ]
  ! RPAREN          [ reduce using rule 21 (atom -> .) ]

    item                           shift and go to state 20
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 21
    empty                          shift and go to state 22
    call                           shift and go to state 23
    atom                           shift and go to state 24
    items                          shift and go to state 28

state 19

    (14) call -> LPAREN LET . items RPAREN
    (6) items -> . item items
    (7) items -> . empty
    (9) item -> . atom
    (10) item -> . quoted_list
    (11) item -> . call
    (12) item -> . empty
    (8) empty -> .
    (16) atom -> . SIMB
    (17) atom -> . bool
    (18) atom -> . NUM
    (19) atom -> . NUM . NUM
    (20) atom -> . TEXT
    (21) atom -> .
    (24) atom -> . NIL
    (4) quoted_list -> . QUOTE list
    (13) call -> . LET items
    (14) call -> . LPAREN LET items RPAREN
    (15) call -> . LPAREN SIMB items RPAREN
    (22) bool -> . TRUE
    (23) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 8 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    LPAREN          shift and go to state 4
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 8 (empty -> .) ]
  ! NUM             [ reduce using rule 8 (empty -> .) ]
  ! TEXT            [ reduce using rule 8 (empty -> .) ]
  ! NIL             [ reduce using rule 8 (empty -> .) ]
  ! QUOTE           [ reduce using rule 8 (empty -> .) ]
  ! LET             [ reduce using rule 8 (empty -> .) ]
  ! LPAREN          [ reduce using rule 8 (empty -> .) ]
  ! TRUE            [ reduce using rule 8 (empty -> .) ]
  ! FALSE           [ reduce using rule 8 (empty -> .) ]
  ! SIMB            [ reduce using rule 21 (atom -> .) ]
  ! NUM             [ reduce using rule 21 (atom -> .) ]
  ! TEXT            [ reduce using rule 21 (atom -> .) ]
  ! NIL             [ reduce using rule 21 (atom -> .) ]
  ! QUOTE           [ reduce using rule 21 (atom -> .) ]
  ! LET             [ reduce using rule 21 (atom -> .) ]
  ! LPAREN          [ reduce using rule 21 (atom -> .) ]
  ! TRUE            [ reduce using rule 21 (atom -> .) ]
  ! FALSE           [ reduce using rule 21 (atom -> .) ]
  ! RPAREN          [ reduce using rule 21 (atom -> .) ]

    item                           shift and go to state 20
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 21
    empty                          shift and go to state 22
    call                           shift and go to state 23
    atom                           shift and go to state 24
    items                          shift and go to state 29

state 20

    (6) items -> item . items
    (6) items -> . item items
    (7) items -> . empty
    (9) item -> . atom
    (10) item -> . quoted_list
    (11) item -> . call
    (12) item -> . empty
    (8) empty -> .
    (16) atom -> . SIMB
    (17) atom -> . bool
    (18) atom -> . NUM
    (19) atom -> . NUM . NUM
    (20) atom -> . TEXT
    (21) atom -> .
    (24) atom -> . NIL
    (4) quoted_list -> . QUOTE list
    (13) call -> . LET items
    (14) call -> . LPAREN LET items RPAREN
    (15) call -> . LPAREN SIMB items RPAREN
    (22) bool -> . TRUE
    (23) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for $end resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 8 (empty -> .)
    RPAREN          reduce using rule 8 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    LPAREN          shift and go to state 4
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 8 (empty -> .) ]
  ! NUM             [ reduce using rule 8 (empty -> .) ]
  ! TEXT            [ reduce using rule 8 (empty -> .) ]
  ! NIL             [ reduce using rule 8 (empty -> .) ]
  ! QUOTE           [ reduce using rule 8 (empty -> .) ]
  ! LET             [ reduce using rule 8 (empty -> .) ]
  ! LPAREN          [ reduce using rule 8 (empty -> .) ]
  ! TRUE            [ reduce using rule 8 (empty -> .) ]
  ! FALSE           [ reduce using rule 8 (empty -> .) ]
  ! SIMB            [ reduce using rule 21 (atom -> .) ]
  ! NUM             [ reduce using rule 21 (atom -> .) ]
  ! TEXT            [ reduce using rule 21 (atom -> .) ]
  ! NIL             [ reduce using rule 21 (atom -> .) ]
  ! QUOTE           [ reduce using rule 21 (atom -> .) ]
  ! LET             [ reduce using rule 21 (atom -> .) ]
  ! LPAREN          [ reduce using rule 21 (atom -> .) ]
  ! TRUE            [ reduce using rule 21 (atom -> .) ]
  ! FALSE           [ reduce using rule 21 (atom -> .) ]
  ! $end            [ reduce using rule 21 (atom -> .) ]
  ! RPAREN          [ reduce using rule 21 (atom -> .) ]

    item                           shift and go to state 20
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 21
    empty                          shift and go to state 22
    call                           shift and go to state 23
    atom                           shift and go to state 24
    items                          shift and go to state 30

state 21

    (10) item -> quoted_list .

    SIMB            reduce using rule 10 (item -> quoted_list .)
    NUM             reduce using rule 10 (item -> quoted_list .)
    TEXT            reduce using rule 10 (item -> quoted_list .)
    NIL             reduce using rule 10 (item -> quoted_list .)
    QUOTE           reduce using rule 10 (item -> quoted_list .)
    LET             reduce using rule 10 (item -> quoted_list .)
    LPAREN          reduce using rule 10 (item -> quoted_list .)
    TRUE            reduce using rule 10 (item -> quoted_list .)
    FALSE           reduce using rule 10 (item -> quoted_list .)
    RPAREN          reduce using rule 10 (item -> quoted_list .)
    $end            reduce using rule 10 (item -> quoted_list .)


state 22

    (7) items -> empty .
    (12) item -> empty .

  ! reduce/reduce conflict for SIMB resolved using rule 7 (items -> empty .)
  ! reduce/reduce conflict for NUM resolved using rule 7 (items -> empty .)
  ! reduce/reduce conflict for TEXT resolved using rule 7 (items -> empty .)
  ! reduce/reduce conflict for NIL resolved using rule 7 (items -> empty .)
  ! reduce/reduce conflict for QUOTE resolved using rule 7 (items -> empty .)
  ! reduce/reduce conflict for LET resolved using rule 7 (items -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 7 (items -> empty .)
  ! reduce/reduce conflict for TRUE resolved using rule 7 (items -> empty .)
  ! reduce/reduce conflict for FALSE resolved using rule 7 (items -> empty .)
  ! reduce/reduce conflict for RPAREN resolved using rule 7 (items -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 7 (items -> empty .)
    SIMB            reduce using rule 7 (items -> empty .)
    NUM             reduce using rule 7 (items -> empty .)
    TEXT            reduce using rule 7 (items -> empty .)
    NIL             reduce using rule 7 (items -> empty .)
    QUOTE           reduce using rule 7 (items -> empty .)
    LET             reduce using rule 7 (items -> empty .)
    LPAREN          reduce using rule 7 (items -> empty .)
    TRUE            reduce using rule 7 (items -> empty .)
    FALSE           reduce using rule 7 (items -> empty .)
    $end            reduce using rule 7 (items -> empty .)
    RPAREN          reduce using rule 7 (items -> empty .)

  ! SIMB            [ reduce using rule 12 (item -> empty .) ]
  ! NUM             [ reduce using rule 12 (item -> empty .) ]
  ! TEXT            [ reduce using rule 12 (item -> empty .) ]
  ! NIL             [ reduce using rule 12 (item -> empty .) ]
  ! QUOTE           [ reduce using rule 12 (item -> empty .) ]
  ! LET             [ reduce using rule 12 (item -> empty .) ]
  ! LPAREN          [ reduce using rule 12 (item -> empty .) ]
  ! TRUE            [ reduce using rule 12 (item -> empty .) ]
  ! FALSE           [ reduce using rule 12 (item -> empty .) ]
  ! RPAREN          [ reduce using rule 12 (item -> empty .) ]
  ! $end            [ reduce using rule 12 (item -> empty .) ]


state 23

    (11) item -> call .

    SIMB            reduce using rule 11 (item -> call .)
    NUM             reduce using rule 11 (item -> call .)
    TEXT            reduce using rule 11 (item -> call .)
    NIL             reduce using rule 11 (item -> call .)
    QUOTE           reduce using rule 11 (item -> call .)
    LET             reduce using rule 11 (item -> call .)
    LPAREN          reduce using rule 11 (item -> call .)
    TRUE            reduce using rule 11 (item -> call .)
    FALSE           reduce using rule 11 (item -> call .)
    RPAREN          reduce using rule 11 (item -> call .)
    $end            reduce using rule 11 (item -> call .)


state 24

    (9) item -> atom .

    SIMB            reduce using rule 9 (item -> atom .)
    NUM             reduce using rule 9 (item -> atom .)
    TEXT            reduce using rule 9 (item -> atom .)
    NIL             reduce using rule 9 (item -> atom .)
    QUOTE           reduce using rule 9 (item -> atom .)
    LET             reduce using rule 9 (item -> atom .)
    LPAREN          reduce using rule 9 (item -> atom .)
    TRUE            reduce using rule 9 (item -> atom .)
    FALSE           reduce using rule 9 (item -> atom .)
    RPAREN          reduce using rule 9 (item -> atom .)
    $end            reduce using rule 9 (item -> atom .)


state 25

    (13) call -> LET items .

    SIMB            reduce using rule 13 (call -> LET items .)
    NUM             reduce using rule 13 (call -> LET items .)
    TEXT            reduce using rule 13 (call -> LET items .)
    NIL             reduce using rule 13 (call -> LET items .)
    QUOTE           reduce using rule 13 (call -> LET items .)
    LET             reduce using rule 13 (call -> LET items .)
    LPAREN          reduce using rule 13 (call -> LET items .)
    TRUE            reduce using rule 13 (call -> LET items .)
    FALSE           reduce using rule 13 (call -> LET items .)
    RPAREN          reduce using rule 13 (call -> LET items .)
    $end            reduce using rule 13 (call -> LET items .)


state 26

    (5) list -> LPAREN items . RPAREN

    RPAREN          shift and go to state 31


state 27

    (19) atom -> NUM . NUM .

    SIMB            reduce using rule 19 (atom -> NUM . NUM .)
    NUM             reduce using rule 19 (atom -> NUM . NUM .)
    TEXT            reduce using rule 19 (atom -> NUM . NUM .)
    NIL             reduce using rule 19 (atom -> NUM . NUM .)
    QUOTE           reduce using rule 19 (atom -> NUM . NUM .)
    LET             reduce using rule 19 (atom -> NUM . NUM .)
    LPAREN          reduce using rule 19 (atom -> NUM . NUM .)
    TRUE            reduce using rule 19 (atom -> NUM . NUM .)
    FALSE           reduce using rule 19 (atom -> NUM . NUM .)
    RPAREN          reduce using rule 19 (atom -> NUM . NUM .)
    $end            reduce using rule 19 (atom -> NUM . NUM .)


state 28

    (15) call -> LPAREN SIMB items . RPAREN

    RPAREN          shift and go to state 32


state 29

    (14) call -> LPAREN LET items . RPAREN

    RPAREN          shift and go to state 33


state 30

    (6) items -> item items .

    SIMB            reduce using rule 6 (items -> item items .)
    NUM             reduce using rule 6 (items -> item items .)
    TEXT            reduce using rule 6 (items -> item items .)
    NIL             reduce using rule 6 (items -> item items .)
    QUOTE           reduce using rule 6 (items -> item items .)
    LET             reduce using rule 6 (items -> item items .)
    LPAREN          reduce using rule 6 (items -> item items .)
    TRUE            reduce using rule 6 (items -> item items .)
    FALSE           reduce using rule 6 (items -> item items .)
    $end            reduce using rule 6 (items -> item items .)
    RPAREN          reduce using rule 6 (items -> item items .)


state 31

    (5) list -> LPAREN items RPAREN .

    $end            reduce using rule 5 (list -> LPAREN items RPAREN .)
    SIMB            reduce using rule 5 (list -> LPAREN items RPAREN .)
    NUM             reduce using rule 5 (list -> LPAREN items RPAREN .)
    TEXT            reduce using rule 5 (list -> LPAREN items RPAREN .)
    NIL             reduce using rule 5 (list -> LPAREN items RPAREN .)
    QUOTE           reduce using rule 5 (list -> LPAREN items RPAREN .)
    LET             reduce using rule 5 (list -> LPAREN items RPAREN .)
    LPAREN          reduce using rule 5 (list -> LPAREN items RPAREN .)
    TRUE            reduce using rule 5 (list -> LPAREN items RPAREN .)
    FALSE           reduce using rule 5 (list -> LPAREN items RPAREN .)
    RPAREN          reduce using rule 5 (list -> LPAREN items RPAREN .)


state 32

    (15) call -> LPAREN SIMB items RPAREN .

    SIMB            reduce using rule 15 (call -> LPAREN SIMB items RPAREN .)
    NUM             reduce using rule 15 (call -> LPAREN SIMB items RPAREN .)
    TEXT            reduce using rule 15 (call -> LPAREN SIMB items RPAREN .)
    NIL             reduce using rule 15 (call -> LPAREN SIMB items RPAREN .)
    QUOTE           reduce using rule 15 (call -> LPAREN SIMB items RPAREN .)
    LET             reduce using rule 15 (call -> LPAREN SIMB items RPAREN .)
    LPAREN          reduce using rule 15 (call -> LPAREN SIMB items RPAREN .)
    TRUE            reduce using rule 15 (call -> LPAREN SIMB items RPAREN .)
    FALSE           reduce using rule 15 (call -> LPAREN SIMB items RPAREN .)
    RPAREN          reduce using rule 15 (call -> LPAREN SIMB items RPAREN .)
    $end            reduce using rule 15 (call -> LPAREN SIMB items RPAREN .)


state 33

    (14) call -> LPAREN LET items RPAREN .

    SIMB            reduce using rule 14 (call -> LPAREN LET items RPAREN .)
    NUM             reduce using rule 14 (call -> LPAREN LET items RPAREN .)
    TEXT            reduce using rule 14 (call -> LPAREN LET items RPAREN .)
    NIL             reduce using rule 14 (call -> LPAREN LET items RPAREN .)
    QUOTE           reduce using rule 14 (call -> LPAREN LET items RPAREN .)
    LET             reduce using rule 14 (call -> LPAREN LET items RPAREN .)
    LPAREN          reduce using rule 14 (call -> LPAREN LET items RPAREN .)
    TRUE            reduce using rule 14 (call -> LPAREN LET items RPAREN .)
    FALSE           reduce using rule 14 (call -> LPAREN LET items RPAREN .)
    RPAREN          reduce using rule 14 (call -> LPAREN LET items RPAREN .)
    $end            reduce using rule 14 (call -> LPAREN LET items RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SIMB in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 11 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 11 resolved as shift
WARNING: shift/reduce conflict for NIL in state 11 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 11 resolved as shift
WARNING: shift/reduce conflict for LET in state 11 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 11 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 11 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 11 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 15 resolved as shift
WARNING: shift/reduce conflict for NUM in state 15 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 15 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 15 resolved as shift
WARNING: shift/reduce conflict for NUM in state 15 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 15 resolved as shift
WARNING: shift/reduce conflict for NIL in state 15 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 15 resolved as shift
WARNING: shift/reduce conflict for LET in state 15 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 15 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 15 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 15 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 18 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 18 resolved as shift
WARNING: shift/reduce conflict for NIL in state 18 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 18 resolved as shift
WARNING: shift/reduce conflict for LET in state 18 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 18 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 18 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 18 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 19 resolved as shift
WARNING: shift/reduce conflict for NUM in state 19 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 19 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 19 resolved as shift
WARNING: shift/reduce conflict for NUM in state 19 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 19 resolved as shift
WARNING: shift/reduce conflict for NIL in state 19 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 19 resolved as shift
WARNING: shift/reduce conflict for LET in state 19 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 19 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 19 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 19 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 20 resolved as shift
WARNING: shift/