
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5D4DB107533B310AD0280CB7D76E9AE2'
    
_lr_action_items = {'QUOTE':([0,2,3,5,7,8,10,11,12,15,16,18,19,20,21,22,23,24,25,27,30,31,32,33,],[1,-17,-18,-22,-20,-16,-24,1,-23,1,-4,1,1,1,-10,-7,-11,-9,-13,-19,-6,-5,-15,-14,]),'$end':([0,2,3,5,6,7,8,9,10,11,12,13,14,16,20,21,22,23,24,25,27,30,31,32,33,],[-21,-17,-18,-22,-2,-20,-16,-3,-24,-8,-23,0,-1,-4,-8,-10,-7,-11,-9,-13,-19,-6,-5,-15,-14,]),'NUM':([0,2,3,5,7,8,10,11,12,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,33,],[3,-17,-18,-22,-20,-16,-24,3,-23,3,-4,27,3,3,3,-10,-7,-11,-9,-13,-19,-6,-5,-15,-14,]),'LPAREN':([0,1,2,3,5,7,8,10,11,12,15,16,18,19,20,21,22,23,24,25,27,30,31,32,33,],[4,15,-17,-18,-22,-20,-16,-24,4,-23,4,-4,4,4,4,-10,-7,-11,-9,-13,-19,-6,-5,-15,-14,]),'TRUE':([0,2,3,5,7,8,10,11,12,15,16,18,19,20,21,22,23,24,25,27,30,31,32,33,],[5,-17,-18,-22,-20,-16,-24,5,-23,5,-4,5,5,5,-10,-7,-11,-9,-13,-19,-6,-5,-15,-14,]),'TEXT':([0,2,3,5,7,8,10,11,12,15,16,18,19,20,21,22,23,24,25,27,30,31,32,33,],[7,-17,-18,-22,-20,-16,-24,7,-23,7,-4,7,7,7,-10,-7,-11,-9,-13,-19,-6,-5,-15,-14,]),'RPAREN':([2,3,5,7,8,10,11,12,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,],[-17,-18,-22,-20,-16,-24,-8,-23,-8,-4,-8,-8,-8,-10,-7,-11,-9,-13,31,-19,32,33,-6,-5,-15,-14,]),'SIMB':([0,2,3,4,5,7,8,10,11,12,15,16,18,19,20,21,22,23,24,25,27,30,31,32,33,],[8,-17,-18,18,-22,-20,-16,-24,8,-23,8,-4,8,8,8,-10,-7,-11,-9,-13,-19,-6,-5,-15,-14,]),'.':([3,],[17,]),'NIL':([0,2,3,5,7,8,10,11,12,15,16,18,19,20,21,22,23,24,25,27,30,31,32,33,],[10,-17,-18,-22,-20,-16,-24,10,-23,10,-4,10,10,10,-10,-7,-11,-9,-13,-19,-6,-5,-15,-14,]),'LET':([0,2,3,4,5,7,8,10,11,12,15,16,18,19,20,21,22,23,24,25,27,30,31,32,33,],[11,-17,-18,19,-22,-20,-16,-24,11,-23,11,-4,11,11,11,-10,-7,-11,-9,-13,-19,-6,-5,-15,-14,]),'FALSE':([0,2,3,5,7,8,10,11,12,15,16,18,19,20,21,22,23,24,25,27,30,31,32,33,],[12,-17,-18,-22,-20,-16,-24,12,-23,12,-4,12,12,12,-10,-7,-11,-9,-13,-19,-6,-5,-15,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'item':([11,15,18,19,20,],[20,20,20,20,20,]),'bool':([0,11,15,18,19,20,],[2,2,2,2,2,2,]),'quoted_list':([0,11,15,18,19,20,],[6,21,21,21,21,21,]),'list':([1,],[16,]),'empty':([11,15,18,19,20,],[22,22,22,22,22,]),'call':([0,11,15,18,19,20,],[9,23,23,23,23,23,]),'exp':([0,],[13,]),'atom':([0,11,15,18,19,20,],[14,24,24,24,24,24,]),'items':([11,15,18,19,20,],[25,26,28,29,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> atom','exp',1,'p_exp_atom','yacc.py',76),
  ('exp -> quoted_list','exp',1,'p_exp_qlist','yacc.py',80),
  ('exp -> call','exp',1,'p_exp_call','yacc.py',84),
  ('quoted_list -> QUOTE list','quoted_list',2,'p_quoted_list','yacc.py',88),
  ('list -> LPAREN items RPAREN','list',3,'p_list','yacc.py',95),
  ('items -> item items','items',2,'p_items','yacc.py',99),
  ('items -> empty','items',1,'p_items_empty','yacc.py',104),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',108),
  ('item -> atom','item',1,'p_item_atom','yacc.py',112),
  ('item -> quoted_list','item',1,'p_item_list','yacc.py',120),
  ('item -> call','item',1,'p_item_call','yacc.py',124),
  ('item -> empty','item',1,'p_item_empty','yacc.py',128),
  ('call -> LET items','call',2,'p_call_PLY','yacc.py',132),
  ('call -> LPAREN LET items RPAREN','call',4,'p_call_PLY','yacc.py',133),
  ('call -> LPAREN SIMB items RPAREN','call',4,'p_call_PLY','yacc.py',134),
  ('atom -> SIMB','atom',1,'p_atom_simbol','yacc.py',157),
  ('atom -> bool','atom',1,'p_atom_bool','yacc.py',165),
  ('atom -> NUM','atom',1,'p_atom_num','yacc.py',169),
  ('atom -> NUM . NUM','atom',3,'p_atom_num','yacc.py',170),
  ('atom -> TEXT','atom',1,'p_atom_word','yacc.py',177),
  ('atom -> <empty>','atom',0,'p_atom_empty','yacc.py',181),
  ('bool -> TRUE','bool',1,'p_true','yacc.py',185),
  ('bool -> FALSE','bool',1,'p_false','yacc.py',189),
  ('atom -> NIL','atom',1,'p_nil','yacc.py',193),
]
